{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport const AccordionContent = _ref => {\n  let {\n    children,\n    className,\n    ...props\n  } = _ref;\n  const {\n    isOpen\n  } = useAccordionContext();\n  const theme = useTheme().theme.accordion.content;\n  return _jsx(\"div\", {\n    className: classNames(theme.base, className),\n    \"data-testid\": \"flowbite-accordion-content\",\n    hidden: !isOpen,\n    ...props,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","classNames","useTheme","useAccordionContext","AccordionContent","children","className","props","isOpen","theme","accordion","content","base","hidden"],"sources":["D:/Ngoding/Bootcamp/sanbercode-reactjs-batch-41/final-project/node_modules/flowbite-react/lib/esm/components/Accordion/AccordionContent.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { useAccordionContext } from './AccordionPanelContext';\nexport const AccordionContent = ({ children, className, ...props }) => {\n    const { isOpen } = useAccordionContext();\n    const theme = useTheme().theme.accordion.content;\n    return (_jsx(\"div\", { className: classNames(theme.base, className), \"data-testid\": \"flowbite-accordion-content\", hidden: !isOpen, ...props, children: children }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,OAAO,MAAMC,gBAAgB,GAAG,QAAuC;EAAA,IAAtC;IAAEC,QAAQ;IAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC;EAC9D,MAAM;IAAEC;EAAO,CAAC,GAAGL,mBAAmB,EAAE;EACxC,MAAMM,KAAK,GAAGP,QAAQ,EAAE,CAACO,KAAK,CAACC,SAAS,CAACC,OAAO;EAChD,OAAQX,IAAI,CAAC,KAAK,EAAE;IAAEM,SAAS,EAAEL,UAAU,CAACQ,KAAK,CAACG,IAAI,EAAEN,SAAS,CAAC;IAAE,aAAa,EAAE,4BAA4B;IAAEO,MAAM,EAAE,CAACL,MAAM;IAAE,GAAGD,KAAK;IAAEF,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACrK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}